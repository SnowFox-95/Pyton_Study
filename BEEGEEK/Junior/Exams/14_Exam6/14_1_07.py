"""
–ß–∏—Å–ª–æ —Å–ª–æ–≤–∞–º–∏ üå∂Ô∏è
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é number_to_words(num), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
–Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ num –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ —Å–ª–æ–≤–µ—Å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –°—á–∏—Ç–∞–π—Ç–µ, —á—Ç–æ —á–∏—Å–ª–æ 1‚â§num ‚â§99.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–æ–¥:

print(number_to_words(7))
print(number_to_words(85))

–¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å:

—Å–µ–º—å
–≤–æ—Å–µ–º—å–¥–µ—Å—è—Ç –ø—è—Ç—å
"""


# –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
def number_to_words(num):
    str_rez = ''
    str_n = str(num)  # –ø–µ—Ä–µ–≤–æ–¥–∏–º —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É
    list_dec = {
        1: "–¥–µ—Å—è—Ç—å",
        2: "–¥–≤–∞–¥—Ü–∞—Ç—å",
        3: "—Ç—Ä–∏–¥—Ü–∞—Ç—å",
        4: "—Å–æ—Ä–æ–∫",
        5: "–ø—è—Ç—å–¥–µ—Å—è—Ç",
        6: "—à–µ—Å—Ç—å–¥–µ—Å—è—Ç",
        7: "—Å–µ–º—å–¥–µ—Å—è—Ç",
        8: "–≤–æ—Å–µ–º—å–¥–µ—Å—è—Ç",
        9: "–¥–µ–≤—è–Ω–æ—Å—Ç–æ"
    }
    list_10 = {
        11: "–æ–¥–∏–Ω–Ω–∞–¥—Ü–∞—Ç—å",
        12: "–¥–≤–µ–Ω–∞–¥—Ü–∞—Ç—å",
        13: "—Ç—Ä–∏–Ω–∞–¥—Ü–∞—Ç—å",
        14: "—á–µ—Ç—ã—Ä–Ω–∞–¥—Ü–∞—Ç—å",
        15: "–ø—è—Ç–Ω–∞–¥—Ü–∞—Ç—å",
        16: "—à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç—å",
        17: "—Å–µ–º–Ω–∞–¥—Ü–∞—Ç—å",
        18: "–≤–æ—Å–µ–º–Ω–∞–¥—Ü–∞—Ç—å",
        19: "–¥–µ–≤—è—Ç–Ω–∞–¥—Ü–∞—Ç—å"
    }
    list_young = {
        1: "–æ–¥–∏–Ω",
        2: "–¥–≤–∞",
        3: "—Ç—Ä–∏",
        4: "—á–µ—Ç—ã—Ä–µ",
        5: "–ø—è—Ç—å",
        6: "—à–µ—Å—Ç—å",
        7: "—Å–µ–º—å",
        8: "–≤–æ—Å–µ–º—å",
        9: "–¥–µ–≤—è—Ç—å"
    }

    len_n = len(str_n)  # —É–∑–Ω–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑—Ä—è–¥–æ–≤ –≤ —á–∏—Å–ª–µ
    if len_n == 1:
        str_rez = list_young[num] + str_rez
    elif len_n == 2 and 1 <= (num // 10) <= 9 and num % 10 == 0:
        str_rez = list_dec[num // 10] + str_rez
    elif len_n == 2 and 11 <= num <= 19:
        str_rez = list_10[num] + str_rez
    elif len_n == 2 and num > 20:
        str_rez = (list_dec[num // 10]) + ' ' + list_young[num % 10] + str_rez

    return str_rez


# —Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
n = int(input())

# –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
print(number_to_words(n))
