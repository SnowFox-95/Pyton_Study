"""
–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å–∫–æ–±–æ—á–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å üå∂Ô∏è
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é is_correct_bracket(text), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
–Ω–µ–ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É text, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ ( –∏ ) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ True –µ—Å–ª–∏
–ø–æ—Å—Ç—É–ø–∏–≤—à–∞—è –Ω–∞ –≤—Ö–æ–¥ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å–∫–æ–±–æ—á–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∏ False –≤
–ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å–∫–æ–±–æ—á–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞, —Å–æ—Å—Ç–æ—è—â–∞—è
 —Ç–æ–ª—å–∫–æ –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ ( –∏ ), –≥–¥–µ –∫–∞–∂–¥–æ–π –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–µ –Ω–∞–π–¥–µ—Ç—Å—è –ø–∞—Ä–Ω–∞—è –∑–∞–∫—Ä—ã–≤–∞—é—â–∞—è
 —Å–∫–æ–±–∫–∞.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–æ–¥:

print(is_correct_bracket('()(()())'))
print(is_correct_bracket(')(())('))
–¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å:

True
False
"""


# –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
def is_correct_bracket(text):
    if ')' == text[0] or '(' == text[-1]:
        return False
    else:
        weigth = 0
        for i in range(len(text)):
            if text[i] == '(':
                weigth += 1
            else:
                weigth -= 1
            if weigth == -1:
                break
        if weigth == 0:
            return True
        else:
            return False


# —Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
txt = input()

# –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
print(is_correct_bracket(txt))

# tests DONOTCOPY!!!
print('#1', is_correct_bracket('((()))'))  # 1
print('#2', is_correct_bracket('(()())'))  # 2
print('#3', is_correct_bracket('(())()'))  # 3
print('#4', is_correct_bracket('()(())'))  # 4
print('#5', is_correct_bracket('()()()'))  # 5
print('#6', is_correct_bracket('()(())()()()(())()(()())((()))'))  # 6
print('#7', is_correct_bracket('()(())()(()())((()))()(())'))  # 7
print('#8', is_correct_bracket('())()()()('))  # 8
print('#9', is_correct_bracket(')))((('))  # 9
print('#10', is_correct_bracket('()(())()((())((()))()(())'))  # 10
print('#11', is_correct_bracket('()(())()(()())((()))()(()'))  # 11
print('#12', is_correct_bracket(')(())()(()())((()))()(())'))  # 12
print('#13', is_correct_bracket('())(()'))  # 13
print('#14', is_correct_bracket(')))'))  # 14
print('#15', is_correct_bracket('(((('))  # 15
print('#16', is_correct_bracket('())((((())))'))  # 16
