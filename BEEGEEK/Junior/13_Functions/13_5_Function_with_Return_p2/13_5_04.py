"""
Next Prime üå∂Ô∏èüå∂Ô∏è
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é get_next_prime(num), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
–Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ num –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤–æ–µ –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ–µ —á–∏—Å–ª–∞ num.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é is_prime() –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–¥–∞—á–∏.

 –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–æ–¥:

print(get_next_prime(6))
print(get_next_prime(7))
print(get_next_prime(14))
–¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å:

7
11
17
"""


# –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
def get_next_prime(num):
    flag = True

    for i in range(num + 1, 1000):
        count = 0
        for j in range(1, 1000):
            if i % j == 0:
                count += 1
        if count == 2:
            flag = False
            break
    return i


# —Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
n = int(input())

# –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
print(get_next_prime(n))
