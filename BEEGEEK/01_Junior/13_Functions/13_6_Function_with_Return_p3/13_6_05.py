"""
–ö–æ—Ä–Ω–∏ —É—Ä–∞–≤–Ω–µ–Ω–∏—è üå∂Ô∏èüå∂Ô∏è
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é solve(a, b, c), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Ç—Ä–∏ —Ü–µ–ª—ã—Ö
—á–∏—Å–ª–∞ a, b, c ‚Äì –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è ax^2+bx+c = 0ax
2
 +bx+c=0 –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∫–æ—Ä–Ω–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –° –ø–æ–¥–æ–±–Ω–æ–π –∑–∞–¥–∞—á–µ–π –º—ã —É–∂–µ —Å—Ç–∞–ª–∫–∏–≤–∞–ª–∏—Å—å.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–º–µ–µ—Ç –∫–æ—Ä–Ω–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–æ–¥:

print(solve(1, -4, -5))
print(solve(-2, 7, -5))
print(solve(1, 2, 1))
–¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å:

-1.0 5.0
1.0 2.5
-1.0 -1.0
"""
from math import pow, sqrt


# –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
def solve(a, b, c):
    diskr = pow(b, 2) - 4 * a * c
    if diskr > 0:
        x_1 = (-b + sqrt(diskr)) / (2 * a)
        x_2 = (-b - sqrt(diskr)) / (2 * a)
    else:
        x_1 = -b / (2 * a)
        x_2 = x_1
    return min(x_1, x_2), max(x_1, x_2)


# —Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
a, b, c = int(input()), int(input()), int(input())

# –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
x1, x2 = solve(a, b, c)
print(x1, x2)

# TESTS DONOTCOPY!
x1, x2 = solve(1, -4, -5)
print(x1, x2)
x1, x2 = solve(-2, 7, -5)
print(x1, x2)
x1, x2 = solve(1, 2, 1)
print(x1, x2)
x1, x2 = solve(22, 34, -8)
print(x1, x2)
x1, x2 = solve(-22, 34, -8)
print(x1, x2)
x1, x2 = solve(5, 20, 20)
print(x1, x2)
